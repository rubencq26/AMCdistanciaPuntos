/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package InterfazGrafica;

import Algoritmos.DyV;
import Algoritmos.DyVMejorado;
import Algoritmos.Exhaustivo;
import Algoritmos.ExhaustivoPoda;
import TSPFicheros.TSPfichero;
import Utils.Solucion;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rubco
 */
public class Comparar2EstrategiasPanel extends javax.swing.JPanel {

    private JScrollPane scroll;
    private TablaRender tabla;
    private DefaultTableModel model;
    
    private JComboBox<String> algoritmo1; 
    private JComboBox<String> algoritmo2;
    
    public Comparar2EstrategiasPanel(){
        setLayout(null);
        setBackground(Color.WHITE);
        
        JLabel titulo = new JLabel("Comparar 2 Estrategias");
        titulo.setFont(new Font("Segoe UI Semibold", Font.BOLD, 28));
        titulo.setForeground(Color.BLACK);
        titulo.setBounds(20, 40, 300, 40);
        add(titulo);
        
        tabla = new TablaRender();
        
        model = new DefaultTableModel(new Object[]{"Talla", "Exhaustivo(t mseg)", "Exhaustivo(t mseg)", "Exhaustivo(calculadas)", "Exhaustivo(calculadas)"}, 0);
        tabla.setModel(model);
        
        String[] opciones = {"Exhaustivo", "ExhaustivoPoda", "DyV", "DyVMejorado"};
        algoritmo1 = new JComboBox<>(opciones);
        algoritmo1.setBounds(20, 120, 220, 20);
        this.add(algoritmo1);
        
        algoritmo2 = new JComboBox<>(opciones);
        algoritmo2.setBounds(540, 120, 220, 20);
        this.add(algoritmo2);
                
        scroll = new JScrollPane(tabla);
        scroll.setBounds(20, 150, 740, 400);
        this.add(scroll);
        
        BotonBarraSuperior boton = new BotonBarraSuperior();
        boton.setText("Comparar Estrategias");
        boton.setBounds(540, 40, 220, 40);
        boton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                comparar();
            }
            
        });
        
        this.add(boton);
    }
    
    public void comparar(){
        model.setRowCount(0);
        int contador = 500;
        Solucion sol1 = new Solucion();
        Solucion sol2 = new Solucion();
        TSPfichero dataset = new TSPfichero();
        
        String opcion1 = (String) algoritmo1.getSelectedItem();
        String opcion2 = (String) algoritmo2.getSelectedItem();
        
        model = new DefaultTableModel(new Object[]{"Talla" ,opcion1 + "(t mseg)", opcion2 + "(t mseg)", opcion1 + "(calculadas)", opcion2 + "(calculadas)"}, 0);
        tabla.setModel(model);
        
        
        while(contador < 7500){
            dataset.generarDataset(contador);
            Exhaustivo ex = new Exhaustivo(dataset.getNodos());
            ExhaustivoPoda exp = new ExhaustivoPoda(dataset.getNodos());
            DyV dy = new DyV(dataset.getNodos());
            DyVMejorado dim = new DyVMejorado(dataset.getNodos());
            
            if(opcion1.equals("Exhaustivo")){
                sol1 = ex.calcularDistanciaMasCorta();
            }else if(opcion1.equals("ExhaustivoPoda")){
                sol1 = exp.calcular();
            }else if(opcion1.equals("DyV")){
                sol1 = dy.calcular();
            }else{
                sol1 = dim.calcular();
            }
            
            if(opcion2.equals("Exhaustivo")){
                sol2 = ex.calcularDistanciaMasCorta();
            }else if(opcion2.equals("ExhaustivoPoda")){
                sol2 = exp.calcular();
            }else if(opcion2.equals("DyV")){
                sol2 = dy.calcular();
            }else{
                sol2 = dim.calcular();
            }
            
            model.addRow(new Object[]{"    " + contador,"   " + sol1.getTiempo(),"   " + sol2.getTiempo(), "    " + sol1.getNCalculadas(), "    " + sol2.getNCalculadas()});
            contador +=500;
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    }